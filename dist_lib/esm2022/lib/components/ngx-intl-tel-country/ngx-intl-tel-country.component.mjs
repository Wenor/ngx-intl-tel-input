import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { CountryDropdownDisplayOptions } from '../../enums/country-dropdown-display-options.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class NgxIntlTelCountryComponent {
    constructor() {
        this.countryClick = new EventEmitter();
    }
    get showFlag() {
        return this.dropdownParams.some(value => value === CountryDropdownDisplayOptions.Flag);
    }
    get showName() {
        return this.dropdownParams.some(value => value === CountryDropdownDisplayOptions.Name);
    }
    get showDial() {
        return this.dropdownParams.some(value => value === CountryDropdownDisplayOptions.Dial);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.3", ngImport: i0, type: NgxIntlTelCountryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.3", type: NgxIntlTelCountryComponent, selector: "ngx-intl-tel-country", inputs: { countries: "countries", dropdownParams: "dropdownParams", stroked: "stroked" }, outputs: { countryClick: "countryClick" }, ngImport: i0, template: "<button class=\"ngx-intl-tel-country\"\r\n        [class.ngx-intl-tel-country_stroked]=\"stroked\"\r\n        [id]=\"country.iso2\"\r\n        *ngFor=\"let country of countries\"\r\n        (click)=\"countryClick.emit(country)\">\r\n    <span *ngIf=\"showFlag\"\r\n          class=\"iti-flag\r\n                 ngx-intl-tel-country__flag\"\r\n          [ngClass]=\"country.flagClass\"></span>\r\n    <span *ngIf=\"showName\"\r\n          class=\"ngx-intl-tel-country__name\">{{country.name}}</span>\r\n    <span *ngIf=\"showDial\"\r\n          class=\"ngx-intl-tel-country__dial\">+{{country.dialCode}}</span>\r\n</button>\r\n", styles: [":root{--ngx-intl-tel-color-text: #404E84;--ngx-intl-tel-color-label: #7078A7;--ngx-intl-tel-color-border: #DEE2EE;--ngx-intl-tel-color-border-hover: #AFB3CF;--ngx-intl-tel-color-placeholder: #C3C6DC;--ngx-intl-tel-background-hover: #F3F6FD;--ngx-intl-tel-error-color: #EA5D73;--ngx-intl-tel-shadow: 0px 5px 24px rgba(57, 65, 92, .15);--mat-error-margin-top: 2px;--mat-subscript-wrapper-margin-top: 18px}.cdk-overlay-connected-position-bounding-box{transform:translateY(-1px)}.ngx-intl-tel-country{display:flex;align-items:center;width:100%;background-color:#fff;border:1px solid #fff}.ngx-intl-tel-country_stroked{font-family:Source Sans Pro,sans-serif;font-size:14px;font-weight:400;line-height:18px;color:var(--ngx-intl-tel-color-text);font-weight:600;height:23px;transition:.2s ease-in-out;outline-color:#fff}.ngx-intl-tel-country_stroked:hover{background:var(--ngx-intl-tel-background-hover)}.ngx-intl-tel-country__flag{display:block}.ngx-intl-tel-country__name,.ngx-intl-tel-country__dial{padding-left:8px}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
export { NgxIntlTelCountryComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.3", ngImport: i0, type: NgxIntlTelCountryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-intl-tel-country', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<button class=\"ngx-intl-tel-country\"\r\n        [class.ngx-intl-tel-country_stroked]=\"stroked\"\r\n        [id]=\"country.iso2\"\r\n        *ngFor=\"let country of countries\"\r\n        (click)=\"countryClick.emit(country)\">\r\n    <span *ngIf=\"showFlag\"\r\n          class=\"iti-flag\r\n                 ngx-intl-tel-country__flag\"\r\n          [ngClass]=\"country.flagClass\"></span>\r\n    <span *ngIf=\"showName\"\r\n          class=\"ngx-intl-tel-country__name\">{{country.name}}</span>\r\n    <span *ngIf=\"showDial\"\r\n          class=\"ngx-intl-tel-country__dial\">+{{country.dialCode}}</span>\r\n</button>\r\n", styles: [":root{--ngx-intl-tel-color-text: #404E84;--ngx-intl-tel-color-label: #7078A7;--ngx-intl-tel-color-border: #DEE2EE;--ngx-intl-tel-color-border-hover: #AFB3CF;--ngx-intl-tel-color-placeholder: #C3C6DC;--ngx-intl-tel-background-hover: #F3F6FD;--ngx-intl-tel-error-color: #EA5D73;--ngx-intl-tel-shadow: 0px 5px 24px rgba(57, 65, 92, .15);--mat-error-margin-top: 2px;--mat-subscript-wrapper-margin-top: 18px}.cdk-overlay-connected-position-bounding-box{transform:translateY(-1px)}.ngx-intl-tel-country{display:flex;align-items:center;width:100%;background-color:#fff;border:1px solid #fff}.ngx-intl-tel-country_stroked{font-family:Source Sans Pro,sans-serif;font-size:14px;font-weight:400;line-height:18px;color:var(--ngx-intl-tel-color-text);font-weight:600;height:23px;transition:.2s ease-in-out;outline-color:#fff}.ngx-intl-tel-country_stroked:hover{background:var(--ngx-intl-tel-background-hover)}.ngx-intl-tel-country__flag{display:block}.ngx-intl-tel-country__name,.ngx-intl-tel-country__dial{padding-left:8px}\n"] }]
        }], propDecorators: { countries: [{
                type: Input
            }], dropdownParams: [{
                type: Input
            }], stroked: [{
                type: Input
            }], countryClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWludGwtdGVsLWNvdW50cnkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWludGwtdGVsLWlucHV0L3NyYy9saWIvY29tcG9uZW50cy9uZ3gtaW50bC10ZWwtY291bnRyeS9uZ3gtaW50bC10ZWwtY291bnRyeS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaW50bC10ZWwtaW5wdXQvc3JjL2xpYi9jb21wb25lbnRzL25neC1pbnRsLXRlbC1jb3VudHJ5L25neC1pbnRsLXRlbC1jb3VudHJ5LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNOLGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxtREFBbUQsQ0FBQzs7O0FBRWhHLE1BT2EsMEJBQTBCO0lBUHZDO1FBbUJFLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztLQWM1QztJQVpDLElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEtBQUssNkJBQTZCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekYsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEtBQUssNkJBQTZCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekYsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEtBQUssNkJBQTZCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekYsQ0FBQzs4R0F4QlUsMEJBQTBCO2tHQUExQiwwQkFBMEIsaU1DbEJ2QyxxbkJBY0E7O1NESWEsMEJBQTBCOzJGQUExQiwwQkFBMEI7a0JBUHRDLFNBQVM7K0JBQ0Usc0JBQXNCLGlCQUdqQixpQkFBaUIsQ0FBQyxJQUFJLG1CQUNwQix1QkFBdUIsQ0FBQyxNQUFNOzhCQUsvQyxTQUFTO3NCQURSLEtBQUs7Z0JBSU4sY0FBYztzQkFEYixLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSztnQkFJTixZQUFZO3NCQURYLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIENvbXBvbmVudCxcclxuICBFdmVudEVtaXR0ZXIsXHJcbiAgSW5wdXQsXHJcbiAgT3V0cHV0LFxyXG4gIFZpZXdFbmNhcHN1bGF0aW9uXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7Q291bnRyeX0gZnJvbSAnLi4vLi4vbW9kZWwvY291bnRyeS5tb2RlbCc7XHJcbmltcG9ydCB7Q291bnRyeURyb3Bkb3duRGlzcGxheU9wdGlvbnN9IGZyb20gJy4uLy4uL2VudW1zL2NvdW50cnktZHJvcGRvd24tZGlzcGxheS1vcHRpb25zLmVudW0nO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICduZ3gtaW50bC10ZWwtY291bnRyeScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL25neC1pbnRsLXRlbC1jb3VudHJ5LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9uZ3gtaW50bC10ZWwtY291bnRyeS5jb21wb25lbnQuc2NzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIE5neEludGxUZWxDb3VudHJ5Q29tcG9uZW50IHtcclxuXHJcbiAgQElucHV0KClcclxuICBjb3VudHJpZXM6IENvdW50cnlbXTtcclxuXHJcbiAgQElucHV0KClcclxuICBkcm9wZG93blBhcmFtczogQ291bnRyeURyb3Bkb3duRGlzcGxheU9wdGlvbnNbXTtcclxuXHJcbiAgQElucHV0KClcclxuICBzdHJva2VkOiBib29sZWFuO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBjb3VudHJ5Q2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPENvdW50cnk+KCk7XHJcblxyXG4gIGdldCBzaG93RmxhZygpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmRyb3Bkb3duUGFyYW1zLnNvbWUodmFsdWUgPT4gdmFsdWUgPT09IENvdW50cnlEcm9wZG93bkRpc3BsYXlPcHRpb25zLkZsYWcpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNob3dOYW1lKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZHJvcGRvd25QYXJhbXMuc29tZSh2YWx1ZSA9PiB2YWx1ZSA9PT0gQ291bnRyeURyb3Bkb3duRGlzcGxheU9wdGlvbnMuTmFtZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgc2hvd0RpYWwoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5kcm9wZG93blBhcmFtcy5zb21lKHZhbHVlID0+IHZhbHVlID09PSBDb3VudHJ5RHJvcGRvd25EaXNwbGF5T3B0aW9ucy5EaWFsKTtcclxuICB9XHJcblxyXG59XHJcbiIsIjxidXR0b24gY2xhc3M9XCJuZ3gtaW50bC10ZWwtY291bnRyeVwiXHJcbiAgICAgICAgW2NsYXNzLm5neC1pbnRsLXRlbC1jb3VudHJ5X3N0cm9rZWRdPVwic3Ryb2tlZFwiXHJcbiAgICAgICAgW2lkXT1cImNvdW50cnkuaXNvMlwiXHJcbiAgICAgICAgKm5nRm9yPVwibGV0IGNvdW50cnkgb2YgY291bnRyaWVzXCJcclxuICAgICAgICAoY2xpY2spPVwiY291bnRyeUNsaWNrLmVtaXQoY291bnRyeSlcIj5cclxuICAgIDxzcGFuICpuZ0lmPVwic2hvd0ZsYWdcIlxyXG4gICAgICAgICAgY2xhc3M9XCJpdGktZmxhZ1xyXG4gICAgICAgICAgICAgICAgIG5neC1pbnRsLXRlbC1jb3VudHJ5X19mbGFnXCJcclxuICAgICAgICAgIFtuZ0NsYXNzXT1cImNvdW50cnkuZmxhZ0NsYXNzXCI+PC9zcGFuPlxyXG4gICAgPHNwYW4gKm5nSWY9XCJzaG93TmFtZVwiXHJcbiAgICAgICAgICBjbGFzcz1cIm5neC1pbnRsLXRlbC1jb3VudHJ5X19uYW1lXCI+e3tjb3VudHJ5Lm5hbWV9fTwvc3Bhbj5cclxuICAgIDxzcGFuICpuZ0lmPVwic2hvd0RpYWxcIlxyXG4gICAgICAgICAgY2xhc3M9XCJuZ3gtaW50bC10ZWwtY291bnRyeV9fZGlhbFwiPit7e2NvdW50cnkuZGlhbENvZGV9fTwvc3Bhbj5cclxuPC9idXR0b24+XHJcbiJdfQ==