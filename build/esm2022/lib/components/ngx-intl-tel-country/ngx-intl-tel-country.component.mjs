import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { CountryDropdownDisplayOptions } from '../../enums/country-dropdown-display-options.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class NgxIntlTelCountryComponent {
    constructor() {
        this.countryClick = new EventEmitter();
    }
    get showFlag() {
        return this.dropdownParams.some(value => value === CountryDropdownDisplayOptions.Flag);
    }
    get showName() {
        return this.dropdownParams.some(value => value === CountryDropdownDisplayOptions.Name);
    }
    get showDial() {
        return this.dropdownParams.some(value => value === CountryDropdownDisplayOptions.Dial);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.10", ngImport: i0, type: NgxIntlTelCountryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.10", type: NgxIntlTelCountryComponent, selector: "ngx-intl-tel-country", inputs: { countries: "countries", dropdownParams: "dropdownParams", stroked: "stroked" }, outputs: { countryClick: "countryClick" }, ngImport: i0, template: "<button class=\"ngx-intl-tel-country\"\r\n        [class.ngx-intl-tel-country_stroked]=\"stroked\"\r\n        [id]=\"country.iso2\"\r\n        *ngFor=\"let country of countries\"\r\n        (click)=\"countryClick.emit(country)\">\r\n    <span *ngIf=\"showFlag\"\r\n          class=\"iti-flag\r\n                 ngx-intl-tel-country__flag\"\r\n          [ngClass]=\"country.flagClass\"></span>\r\n    <span *ngIf=\"showName\"\r\n          class=\"ngx-intl-tel-country__name\">{{country.name}}</span>\r\n    <span *ngIf=\"showDial\"\r\n          class=\"ngx-intl-tel-country__dial\">+{{country.dialCode}}</span>\r\n</button>\r\n", styles: [":root{--ngx-intl-tel-color-text: #404E84;--ngx-intl-tel-color-label: #7078A7;--ngx-intl-tel-color-border: #DEE2EE;--ngx-intl-tel-color-border-hover: #AFB3CF;--ngx-intl-tel-color-placeholder: #C3C6DC;--ngx-intl-tel-background-hover: #F3F6FD;--ngx-intl-tel-error-color: #EA5D73;--ngx-intl-tel-shadow: 0px 5px 24px rgba(57, 65, 92, .15);--mat-error-margin-top: 2px;--mat-subscript-wrapper-margin-top: 18px}.cdk-overlay-connected-position-bounding-box{transform:translateY(-1px)}.ngx-intl-tel-country{display:flex;align-items:center;width:100%;background-color:#fff;border:1px solid #fff}.ngx-intl-tel-country_stroked{font-family:Source Sans Pro,sans-serif;font-size:14px;font-weight:400;line-height:18px;color:var(--ngx-intl-tel-color-text);font-weight:600;height:23px;transition:.2s ease-in-out;outline-color:#fff}.ngx-intl-tel-country_stroked:hover{background:var(--ngx-intl-tel-background-hover)}.ngx-intl-tel-country__flag{display:block}.ngx-intl-tel-country__name,.ngx-intl-tel-country__dial{padding-left:8px}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.10", ngImport: i0, type: NgxIntlTelCountryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-intl-tel-country', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<button class=\"ngx-intl-tel-country\"\r\n        [class.ngx-intl-tel-country_stroked]=\"stroked\"\r\n        [id]=\"country.iso2\"\r\n        *ngFor=\"let country of countries\"\r\n        (click)=\"countryClick.emit(country)\">\r\n    <span *ngIf=\"showFlag\"\r\n          class=\"iti-flag\r\n                 ngx-intl-tel-country__flag\"\r\n          [ngClass]=\"country.flagClass\"></span>\r\n    <span *ngIf=\"showName\"\r\n          class=\"ngx-intl-tel-country__name\">{{country.name}}</span>\r\n    <span *ngIf=\"showDial\"\r\n          class=\"ngx-intl-tel-country__dial\">+{{country.dialCode}}</span>\r\n</button>\r\n", styles: [":root{--ngx-intl-tel-color-text: #404E84;--ngx-intl-tel-color-label: #7078A7;--ngx-intl-tel-color-border: #DEE2EE;--ngx-intl-tel-color-border-hover: #AFB3CF;--ngx-intl-tel-color-placeholder: #C3C6DC;--ngx-intl-tel-background-hover: #F3F6FD;--ngx-intl-tel-error-color: #EA5D73;--ngx-intl-tel-shadow: 0px 5px 24px rgba(57, 65, 92, .15);--mat-error-margin-top: 2px;--mat-subscript-wrapper-margin-top: 18px}.cdk-overlay-connected-position-bounding-box{transform:translateY(-1px)}.ngx-intl-tel-country{display:flex;align-items:center;width:100%;background-color:#fff;border:1px solid #fff}.ngx-intl-tel-country_stroked{font-family:Source Sans Pro,sans-serif;font-size:14px;font-weight:400;line-height:18px;color:var(--ngx-intl-tel-color-text);font-weight:600;height:23px;transition:.2s ease-in-out;outline-color:#fff}.ngx-intl-tel-country_stroked:hover{background:var(--ngx-intl-tel-background-hover)}.ngx-intl-tel-country__flag{display:block}.ngx-intl-tel-country__name,.ngx-intl-tel-country__dial{padding-left:8px}\n"] }]
        }], propDecorators: { countries: [{
                type: Input
            }], dropdownParams: [{
                type: Input
            }], stroked: [{
                type: Input
            }], countryClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWludGwtdGVsLWNvdW50cnkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWludGwtdGVsLWlucHV0L3NyYy9saWIvY29tcG9uZW50cy9uZ3gtaW50bC10ZWwtY291bnRyeS9uZ3gtaW50bC10ZWwtY291bnRyeS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaW50bC10ZWwtaW5wdXQvc3JjL2xpYi9jb21wb25lbnRzL25neC1pbnRsLXRlbC1jb3VudHJ5L25neC1pbnRsLXRlbC1jb3VudHJ5LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNOLGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxtREFBbUQsQ0FBQzs7O0FBU2hHLE1BQU0sT0FBTywwQkFBMEI7SUFQdkM7UUFtQkUsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO0tBYzVDO0lBWkMsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssS0FBSyw2QkFBNkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssS0FBSyw2QkFBNkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssS0FBSyw2QkFBNkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RixDQUFDOytHQXhCVSwwQkFBMEI7bUdBQTFCLDBCQUEwQixpTUNsQnZDLHFuQkFjQTs7NEZESWEsMEJBQTBCO2tCQVB0QyxTQUFTOytCQUNFLHNCQUFzQixpQkFHakIsaUJBQWlCLENBQUMsSUFBSSxtQkFDcEIsdUJBQXVCLENBQUMsTUFBTTs4QkFLL0MsU0FBUztzQkFEUixLQUFLO2dCQUlOLGNBQWM7c0JBRGIsS0FBSztnQkFJTixPQUFPO3NCQUROLEtBQUs7Z0JBSU4sWUFBWTtzQkFEWCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcclxuICBDb21wb25lbnQsXHJcbiAgRXZlbnRFbWl0dGVyLFxyXG4gIElucHV0LFxyXG4gIE91dHB1dCxcclxuICBWaWV3RW5jYXBzdWxhdGlvblxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0NvdW50cnl9IGZyb20gJy4uLy4uL21vZGVsL2NvdW50cnkubW9kZWwnO1xyXG5pbXBvcnQge0NvdW50cnlEcm9wZG93bkRpc3BsYXlPcHRpb25zfSBmcm9tICcuLi8uLi9lbnVtcy9jb3VudHJ5LWRyb3Bkb3duLWRpc3BsYXktb3B0aW9ucy5lbnVtJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmd4LWludGwtdGVsLWNvdW50cnknLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9uZ3gtaW50bC10ZWwtY291bnRyeS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbmd4LWludGwtdGVsLWNvdW50cnkuY29tcG9uZW50LnNjc3MnXSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hJbnRsVGVsQ291bnRyeUNvbXBvbmVudCB7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY291bnRyaWVzOiBDb3VudHJ5W107XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZHJvcGRvd25QYXJhbXM6IENvdW50cnlEcm9wZG93bkRpc3BsYXlPcHRpb25zW107XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc3Ryb2tlZDogYm9vbGVhbjtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgY291bnRyeUNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxDb3VudHJ5PigpO1xyXG5cclxuICBnZXQgc2hvd0ZsYWcoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5kcm9wZG93blBhcmFtcy5zb21lKHZhbHVlID0+IHZhbHVlID09PSBDb3VudHJ5RHJvcGRvd25EaXNwbGF5T3B0aW9ucy5GbGFnKTtcclxuICB9XHJcblxyXG4gIGdldCBzaG93TmFtZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmRyb3Bkb3duUGFyYW1zLnNvbWUodmFsdWUgPT4gdmFsdWUgPT09IENvdW50cnlEcm9wZG93bkRpc3BsYXlPcHRpb25zLk5hbWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNob3dEaWFsKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZHJvcGRvd25QYXJhbXMuc29tZSh2YWx1ZSA9PiB2YWx1ZSA9PT0gQ291bnRyeURyb3Bkb3duRGlzcGxheU9wdGlvbnMuRGlhbCk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCI8YnV0dG9uIGNsYXNzPVwibmd4LWludGwtdGVsLWNvdW50cnlcIlxyXG4gICAgICAgIFtjbGFzcy5uZ3gtaW50bC10ZWwtY291bnRyeV9zdHJva2VkXT1cInN0cm9rZWRcIlxyXG4gICAgICAgIFtpZF09XCJjb3VudHJ5LmlzbzJcIlxyXG4gICAgICAgICpuZ0Zvcj1cImxldCBjb3VudHJ5IG9mIGNvdW50cmllc1wiXHJcbiAgICAgICAgKGNsaWNrKT1cImNvdW50cnlDbGljay5lbWl0KGNvdW50cnkpXCI+XHJcbiAgICA8c3BhbiAqbmdJZj1cInNob3dGbGFnXCJcclxuICAgICAgICAgIGNsYXNzPVwiaXRpLWZsYWdcclxuICAgICAgICAgICAgICAgICBuZ3gtaW50bC10ZWwtY291bnRyeV9fZmxhZ1wiXHJcbiAgICAgICAgICBbbmdDbGFzc109XCJjb3VudHJ5LmZsYWdDbGFzc1wiPjwvc3Bhbj5cclxuICAgIDxzcGFuICpuZ0lmPVwic2hvd05hbWVcIlxyXG4gICAgICAgICAgY2xhc3M9XCJuZ3gtaW50bC10ZWwtY291bnRyeV9fbmFtZVwiPnt7Y291bnRyeS5uYW1lfX08L3NwYW4+XHJcbiAgICA8c3BhbiAqbmdJZj1cInNob3dEaWFsXCJcclxuICAgICAgICAgIGNsYXNzPVwibmd4LWludGwtdGVsLWNvdW50cnlfX2RpYWxcIj4re3tjb3VudHJ5LmRpYWxDb2RlfX08L3NwYW4+XHJcbjwvYnV0dG9uPlxyXG4iXX0=